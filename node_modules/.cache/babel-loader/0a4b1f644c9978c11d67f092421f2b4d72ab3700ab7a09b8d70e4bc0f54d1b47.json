{"ast":null,"code":"var _jsxFileName = \"C:\\\\CursorProjects\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Bird from './Bird';\nimport Pipe from './Pipe';\nimport gameOverSound from '../assets/bruh.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRAVITY = 0.7;\nconst JUMP_FORCE = -8;\nconst PIPE_GAP = 150;\nconst PIPE_INTERVAL = 2000;\nconst BASE_PIPE_SPEED = 6.25;\nconst SPEED_INCREASE = 0.025; // 2.5% increase per pipe\n\nconst Game = () => {\n  _s();\n  const [birdPosition, setBirdPosition] = useState(250);\n  const [velocity, setVelocity] = useState(0);\n  const [pipes, setPipes] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [speedMultiplier, setSpeedMultiplier] = useState(1);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    // Create audio element when component mounts\n    audioRef.current = new Audio(gameOverSound);\n  }, []);\n  const playGameOverSound = () => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0; // Reset audio to start\n      audioRef.current.play();\n    }\n  };\n  const jump = useCallback(() => {\n    if (!isGameOver) {\n      setVelocity(JUMP_FORCE);\n    }\n  }, [isGameOver]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.code === 'Space') {\n        jump();\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [jump]);\n  useEffect(() => {\n    if (isGameOver) return;\n    const gameLoop = setInterval(() => {\n      setBirdPosition(prev => {\n        const newPosition = prev + velocity;\n        if (newPosition > 500 || newPosition < 0) {\n          setIsGameOver(true);\n          return prev;\n        }\n        return newPosition;\n      });\n      setVelocity(prev => prev + GRAVITY);\n    }, 20);\n    return () => clearInterval(gameLoop);\n  }, [velocity, isGameOver]);\n  useEffect(() => {\n    if (isGameOver) return;\n    const pipeGenerator = setInterval(() => {\n      const height = Math.random() * (400 - PIPE_GAP);\n      setPipes(prev => [...prev, {\n        x: 800,\n        height,\n        passed: false\n      }]);\n    }, PIPE_INTERVAL);\n    return () => clearInterval(pipeGenerator);\n  }, [isGameOver]);\n  useEffect(() => {\n    if (isGameOver) return;\n    const pipeInterval = setInterval(() => {\n      setPipes(prev => {\n        return prev.map(pipe => {\n          // Move pipe to the left with current speed multiplier\n          const newX = pipe.x - BASE_PIPE_SPEED * speedMultiplier;\n\n          // Check collision with more precise hitbox\n          const birdLeft = 50; // Bird's x position\n          const birdRight = birdLeft + 40; // Bird width is 40px\n          const birdTop = birdPosition;\n          const birdBottom = birdPosition + 40; // Bird height is 40px\n\n          const pipeLeft = newX;\n          const pipeRight = newX + 60; // Pipe width is 60px\n\n          if (birdRight > pipeLeft && birdLeft < pipeRight && (birdTop < pipe.height || birdBottom > pipe.height + PIPE_GAP)) {\n            setIsGameOver(true);\n            playGameOverSound();\n          }\n\n          // Check if pipe passed the bird\n          if (!pipe.passed && newX < 50) {\n            setScore(s => s + 1);\n            setSpeedMultiplier(prev => prev + SPEED_INCREASE); // Increase speed when passing a pipe\n            return {\n              ...pipe,\n              x: newX,\n              passed: true\n            };\n          }\n          return {\n            ...pipe,\n            x: newX\n          };\n        }).filter(pipe => pipe.x > -100); // Remove pipes that are off screen\n      });\n    }, 16); // 60 FPS\n\n    return () => clearInterval(pipeInterval);\n  }, [isGameOver, birdPosition, speedMultiplier]);\n  const restartGame = () => {\n    setBirdPosition(250);\n    setVelocity(0);\n    setPipes([]);\n    setScore(0);\n    setSpeedMultiplier(1); // Reset speed multiplier on game restart\n    setIsGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: jump,\n    style: {\n      height: '500px',\n      width: '100%',\n      backgroundColor: 'lightblue',\n      position: 'relative',\n      overflow: 'hidden',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Bird, {\n      position: birdPosition,\n      velocity: velocity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), pipes.map((pipe, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: pipe.x,\n        top: 0,\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Pipe, {\n        height: pipe.height,\n        top: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pipe, {\n        height: 500 - pipe.height - PIPE_GAP,\n        top: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        fontSize: '24px',\n        fontWeight: 'bold'\n      },\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.stopPropagation();\n          restartGame();\n        },\n        style: {\n          padding: '10px 20px',\n          fontSize: '18px',\n          cursor: 'pointer'\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"KwbLEfdnsxC0RhQY5wIUqesYG3E=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Bird","Pipe","gameOverSound","jsxDEV","_jsxDEV","GRAVITY","JUMP_FORCE","PIPE_GAP","PIPE_INTERVAL","BASE_PIPE_SPEED","SPEED_INCREASE","Game","_s","birdPosition","setBirdPosition","velocity","setVelocity","pipes","setPipes","isGameOver","setIsGameOver","score","setScore","speedMultiplier","setSpeedMultiplier","audioRef","current","Audio","playGameOverSound","currentTime","play","jump","handleKeyPress","e","code","window","addEventListener","removeEventListener","gameLoop","setInterval","prev","newPosition","clearInterval","pipeGenerator","height","Math","random","x","passed","pipeInterval","map","pipe","newX","birdLeft","birdRight","birdTop","birdBottom","pipeLeft","pipeRight","s","filter","restartGame","onClick","style","width","backgroundColor","position","overflow","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","i","left","top","fontSize","fontWeight","transform","textAlign","stopPropagation","padding","_c","$RefreshReg$"],"sources":["C:/CursorProjects/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Bird from './Bird';\nimport Pipe from './Pipe';\nimport gameOverSound from '../assets/bruh.mp3';\n\nconst GRAVITY = 0.7;\nconst JUMP_FORCE = -8;\nconst PIPE_GAP = 150;\nconst PIPE_INTERVAL = 2000;\nconst BASE_PIPE_SPEED = 6.25;\nconst SPEED_INCREASE = 0.025; // 2.5% increase per pipe\n\nconst Game: React.FC = () => {\n  const [birdPosition, setBirdPosition] = useState(250);\n  const [velocity, setVelocity] = useState(0);\n  const [pipes, setPipes] = useState<{ x: number; height: number; passed: boolean }[]>([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [speedMultiplier, setSpeedMultiplier] = useState(1);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  useEffect(() => {\n    // Create audio element when component mounts\n    audioRef.current = new Audio(gameOverSound);\n  }, []);\n\n  const playGameOverSound = () => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0; // Reset audio to start\n      audioRef.current.play();\n    }\n  };\n\n  const jump = useCallback(() => {\n    if (!isGameOver) {\n      setVelocity(JUMP_FORCE);\n    }\n  }, [isGameOver]);\n\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.code === 'Space') {\n        jump();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [jump]);\n\n  useEffect(() => {\n    if (isGameOver) return;\n\n    const gameLoop = setInterval(() => {\n      setBirdPosition((prev) => {\n        const newPosition = prev + velocity;\n        if (newPosition > 500 || newPosition < 0) {\n          setIsGameOver(true);\n          return prev;\n        }\n        return newPosition;\n      });\n      setVelocity((prev) => prev + GRAVITY);\n    }, 20);\n\n    return () => clearInterval(gameLoop);\n  }, [velocity, isGameOver]);\n\n  useEffect(() => {\n    if (isGameOver) return;\n\n    const pipeGenerator = setInterval(() => {\n      const height = Math.random() * (400 - PIPE_GAP);\n      setPipes((prev) => [...prev, { x: 800, height, passed: false }]);\n    }, PIPE_INTERVAL);\n\n    return () => clearInterval(pipeGenerator);\n  }, [isGameOver]);\n\n  useEffect(() => {\n    if (isGameOver) return;\n\n    const pipeInterval = setInterval(() => {\n      setPipes((prev) => {\n        return prev\n          .map((pipe) => {\n            // Move pipe to the left with current speed multiplier\n            const newX = pipe.x - (BASE_PIPE_SPEED * speedMultiplier);\n            \n            // Check collision with more precise hitbox\n            const birdLeft = 50;  // Bird's x position\n            const birdRight = birdLeft + 40;  // Bird width is 40px\n            const birdTop = birdPosition;\n            const birdBottom = birdPosition + 40;  // Bird height is 40px\n            \n            const pipeLeft = newX;\n            const pipeRight = newX + 60;  // Pipe width is 60px\n            \n            if (\n              birdRight > pipeLeft && \n              birdLeft < pipeRight && \n              (birdTop < pipe.height || birdBottom > pipe.height + PIPE_GAP)\n            ) {\n              setIsGameOver(true);\n              playGameOverSound();\n            }\n\n            // Check if pipe passed the bird\n            if (!pipe.passed && newX < 50) {\n              setScore((s) => s + 1);\n              setSpeedMultiplier(prev => prev + SPEED_INCREASE); // Increase speed when passing a pipe\n              return { ...pipe, x: newX, passed: true };\n            }\n\n            return { ...pipe, x: newX };\n          })\n          .filter((pipe) => pipe.x > -100); // Remove pipes that are off screen\n      });\n    }, 16); // 60 FPS\n\n    return () => clearInterval(pipeInterval);\n  }, [isGameOver, birdPosition, speedMultiplier]);\n\n  const restartGame = () => {\n    setBirdPosition(250);\n    setVelocity(0);\n    setPipes([]);\n    setScore(0);\n    setSpeedMultiplier(1); // Reset speed multiplier on game restart\n    setIsGameOver(false);\n  };\n\n  return (\n    <div\n      onClick={jump}\n      style={{\n        height: '500px',\n        width: '100%',\n        backgroundColor: 'lightblue',\n        position: 'relative',\n        overflow: 'hidden',\n        cursor: 'pointer',\n      }}\n    >\n      <Bird position={birdPosition} velocity={velocity} />\n      {pipes.map((pipe, i) => (\n        <div key={i} style={{ position: 'absolute', left: pipe.x, top: 0, height: '100%' }}>\n          <Pipe height={pipe.height} top />\n          <Pipe height={500 - pipe.height - PIPE_GAP} top={false} />\n        </div>\n      ))}\n      \n      <div\n        style={{\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          fontSize: '24px',\n          fontWeight: 'bold',\n        }}\n      >\n        Score: {score}\n      </div>\n\n      {isGameOver && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            textAlign: 'center',\n          }}\n        >\n          <h1>Game Over!</h1>\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              restartGame();\n            }}\n            style={{\n              padding: '10px 20px',\n              fontSize: '18px',\n              cursor: 'pointer',\n            }}\n          >\n            Restart\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}