{"ast":null,"code":"var _jsxFileName = \"C:\\\\CursorProjects\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Bird from './Bird';\nimport Pipe from './Pipe';\nimport gameOverSound from '../assets/bruh.mp3';\nimport collisionSound from '../assets/wetfart.mp3';\nimport backgroundMusic from '../assets/BasshunterDotA8bit.mp3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRAVITY = 0.7;\nconst JUMP_FORCE = -8;\nconst PIPE_GAP = 150;\nconst PIPE_INTERVAL = 2000;\nconst BASE_PIPE_SPEED = 6.25;\nconst SPEED_INCREASE = 0.025; // 2.5% increase per pipe\n\n// Create a single music instance outside the component\nconst backgroundMusicInstance = new Audio(backgroundMusic);\nbackgroundMusicInstance.loop = true;\nbackgroundMusicInstance.volume = 0.5;\nconst Game = () => {\n  _s();\n  const [birdPosition, setBirdPosition] = useState(250);\n  const [velocity, setVelocity] = useState(0);\n  const [pipes, setPipes] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [speedMultiplier, setSpeedMultiplier] = useState(1);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const audioRef = useRef(null);\n  const collisionRef = useRef(null);\n  const lastScoredPipeRef = useRef(null);\n\n  // Initialize game over sound\n  useEffect(() => {\n    audioRef.current = new Audio(gameOverSound);\n    collisionRef.current = new Audio(collisionSound);\n    collisionRef.current.volume = 1.0; // Full volume for the collision sound\n  }, []);\n\n  // Handle background music\n  useEffect(() => {\n    const playMusic = async () => {\n      try {\n        await backgroundMusicInstance.play();\n      } catch (err) {\n        console.log('Autoplay prevented - will try again');\n        const handleInteraction = async () => {\n          await backgroundMusicInstance.play();\n          document.removeEventListener('click', handleInteraction);\n        };\n        document.addEventListener('click', handleInteraction);\n      }\n    };\n    playMusic();\n    return () => {\n      backgroundMusicInstance.pause();\n      backgroundMusicInstance.currentTime = 0;\n    };\n  }, []);\n  const playGameOverSound = () => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    }\n  };\n  const playCollisionSound = () => {\n    if (collisionRef.current) {\n      collisionRef.current.currentTime = 0;\n      collisionRef.current.play();\n    }\n  };\n  const startGame = () => {\n    setIsGameStarted(true);\n    setBirdPosition(250);\n    setVelocity(0);\n    setPipes([]);\n    setScore(0);\n    setSpeedMultiplier(1);\n    setIsGameOver(false);\n    lastScoredPipeRef.current = null;\n  };\n  const jump = useCallback(() => {\n    if (!isGameOver && isGameStarted) {\n      setVelocity(JUMP_FORCE);\n    }\n  }, [isGameOver, isGameStarted]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.code === 'Space') {\n        jump();\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [jump]);\n  useEffect(() => {\n    if (!isGameStarted || isGameOver) return;\n    const gameLoop = setInterval(() => {\n      setBirdPosition(prev => {\n        const newPosition = prev + velocity;\n        if (newPosition > 500 || newPosition < 0) {\n          setIsGameOver(true);\n          playCollisionSound();\n          playGameOverSound();\n          return prev;\n        }\n        return newPosition;\n      });\n      setVelocity(prev => prev + GRAVITY);\n    }, 20);\n    return () => clearInterval(gameLoop);\n  }, [velocity, isGameOver, isGameStarted]);\n  useEffect(() => {\n    if (!isGameStarted || isGameOver) return;\n    const pipeGenerator = setInterval(() => {\n      const height = Math.random() * (400 - PIPE_GAP);\n      setPipes(prev => [...prev, {\n        x: 800,\n        height,\n        passed: false,\n        scored: false\n      }]);\n    }, PIPE_INTERVAL);\n    return () => clearInterval(pipeGenerator);\n  }, [isGameOver, isGameStarted]);\n  useEffect(() => {\n    if (!isGameStarted || isGameOver) return;\n    const pipeInterval = setInterval(() => {\n      setPipes(prev => {\n        return prev.map(pipe => {\n          const newX = pipe.x - BASE_PIPE_SPEED * speedMultiplier;\n          const birdLeft = 50;\n          const birdRight = birdLeft + 40;\n          const birdTop = birdPosition;\n          const birdBottom = birdPosition + 40;\n          const pipeLeft = newX;\n          const pipeRight = newX + 60;\n          if (birdRight > pipeLeft && birdLeft < pipeRight && (birdTop < pipe.height || birdBottom > pipe.height + PIPE_GAP)) {\n            setIsGameOver(true);\n            playCollisionSound();\n            playGameOverSound();\n          }\n\n          // Only score if pipe center passes bird center and hasn't been scored\n          const pipeCenter = newX + 30;\n          const birdCenter = birdLeft + 20;\n          if (!pipe.scored && pipeCenter < birdCenter && pipe.x + 30 >= birdCenter) {\n            if (lastScoredPipeRef.current !== newX) {\n              setScore(s => s + 1);\n              setSpeedMultiplier(prev => prev + SPEED_INCREASE);\n              lastScoredPipeRef.current = newX;\n              return {\n                ...pipe,\n                x: newX,\n                passed: true,\n                scored: true\n              };\n            }\n          }\n          return {\n            ...pipe,\n            x: newX\n          };\n        }).filter(pipe => pipe.x > -100);\n      });\n    }, 16);\n    return () => clearInterval(pipeInterval);\n  }, [isGameOver, birdPosition, speedMultiplier, isGameStarted]);\n  const restartGame = () => {\n    startGame();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: isGameStarted ? jump : undefined,\n    style: {\n      height: '500px',\n      width: '100%',\n      backgroundColor: 'lightblue',\n      position: 'relative',\n      overflow: 'hidden',\n      cursor: isGameStarted ? 'pointer' : 'default'\n    },\n    children: !isGameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 0 10px rgba(0, 0, 0, 0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: '20px',\n          color: '#333'\n        },\n        children: \"Flappy Bird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: '20px',\n          color: '#666'\n        },\n        children: \"Press SPACE or click to jump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        style: {\n          padding: '10px 30px',\n          fontSize: '18px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          transition: 'background-color 0.3s'\n        },\n        onMouseOver: e => e.currentTarget.style.backgroundColor = '#45a049',\n        onMouseOut: e => e.currentTarget.style.backgroundColor = '#4CAF50',\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Bird, {\n        position: birdPosition,\n        velocity: velocity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), pipes.map((pipe, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: pipe.x,\n          top: 0,\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Pipe, {\n          height: pipe.height,\n          top: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Pipe, {\n          height: 500 - pipe.height - PIPE_GAP,\n          top: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          fontSize: '24px',\n          fontWeight: 'bold'\n        },\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          textAlign: 'center',\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 0 10px rgba(0, 0, 0, 0.2)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: '20px',\n            fontSize: '20px'\n          },\n          children: [\"Final Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            restartGame();\n          },\n          style: {\n            padding: '10px 20px',\n            fontSize: '18px',\n            cursor: 'pointer',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            transition: 'background-color 0.3s'\n          },\n          onMouseOver: e => e.currentTarget.style.backgroundColor = '#45a049',\n          onMouseOut: e => e.currentTarget.style.backgroundColor = '#4CAF50',\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"iArw5QV45v7PkYaTWHgIOCQE4sY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Bird","Pipe","gameOverSound","collisionSound","backgroundMusic","jsxDEV","_jsxDEV","Fragment","_Fragment","GRAVITY","JUMP_FORCE","PIPE_GAP","PIPE_INTERVAL","BASE_PIPE_SPEED","SPEED_INCREASE","backgroundMusicInstance","Audio","loop","volume","Game","_s","birdPosition","setBirdPosition","velocity","setVelocity","pipes","setPipes","isGameOver","setIsGameOver","score","setScore","speedMultiplier","setSpeedMultiplier","isGameStarted","setIsGameStarted","audioRef","collisionRef","lastScoredPipeRef","current","playMusic","play","err","console","log","handleInteraction","document","removeEventListener","addEventListener","pause","currentTime","playGameOverSound","playCollisionSound","startGame","jump","handleKeyPress","e","code","window","gameLoop","setInterval","prev","newPosition","clearInterval","pipeGenerator","height","Math","random","x","passed","scored","pipeInterval","map","pipe","newX","birdLeft","birdRight","birdTop","birdBottom","pipeLeft","pipeRight","pipeCenter","birdCenter","s","filter","restartGame","onClick","undefined","style","width","backgroundColor","position","overflow","cursor","children","top","left","transform","textAlign","padding","borderRadius","boxShadow","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","border","transition","onMouseOver","currentTarget","onMouseOut","i","fontWeight","stopPropagation","_c","$RefreshReg$"],"sources":["C:/CursorProjects/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Bird from './Bird';\nimport Pipe from './Pipe';\nimport gameOverSound from '../assets/bruh.mp3';\nimport collisionSound from '../assets/wetfart.mp3';\nimport backgroundMusic from '../assets/BasshunterDotA8bit.mp3';\n\nconst GRAVITY = 0.7;\nconst JUMP_FORCE = -8;\nconst PIPE_GAP = 150;\nconst PIPE_INTERVAL = 2000;\nconst BASE_PIPE_SPEED = 6.25;\nconst SPEED_INCREASE = 0.025; // 2.5% increase per pipe\n\n// Create a single music instance outside the component\nconst backgroundMusicInstance = new Audio(backgroundMusic);\nbackgroundMusicInstance.loop = true;\nbackgroundMusicInstance.volume = 0.5;\n\nconst Game: React.FC = () => {\n  const [birdPosition, setBirdPosition] = useState(250);\n  const [velocity, setVelocity] = useState(0);\n  const [pipes, setPipes] = useState<{ x: number; height: number; passed: boolean; scored: boolean }[]>([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [speedMultiplier, setSpeedMultiplier] = useState(1);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const collisionRef = useRef<HTMLAudioElement | null>(null);\n  const lastScoredPipeRef = useRef<number | null>(null);\n\n  // Initialize game over sound\n  useEffect(() => {\n    audioRef.current = new Audio(gameOverSound);\n    collisionRef.current = new Audio(collisionSound);\n    collisionRef.current.volume = 1.0; // Full volume for the collision sound\n  }, []);\n\n  // Handle background music\n  useEffect(() => {\n    const playMusic = async () => {\n      try {\n        await backgroundMusicInstance.play();\n      } catch (err) {\n        console.log('Autoplay prevented - will try again');\n        const handleInteraction = async () => {\n          await backgroundMusicInstance.play();\n          document.removeEventListener('click', handleInteraction);\n        };\n        document.addEventListener('click', handleInteraction);\n      }\n    };\n\n    playMusic();\n\n    return () => {\n      backgroundMusicInstance.pause();\n      backgroundMusicInstance.currentTime = 0;\n    };\n  }, []);\n\n  const playGameOverSound = () => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    }\n  };\n\n  const playCollisionSound = () => {\n    if (collisionRef.current) {\n      collisionRef.current.currentTime = 0;\n      collisionRef.current.play();\n    }\n  };\n\n  const startGame = () => {\n    setIsGameStarted(true);\n    setBirdPosition(250);\n    setVelocity(0);\n    setPipes([]);\n    setScore(0);\n    setSpeedMultiplier(1);\n    setIsGameOver(false);\n    lastScoredPipeRef.current = null;\n  };\n\n  const jump = useCallback(() => {\n    if (!isGameOver && isGameStarted) {\n      setVelocity(JUMP_FORCE);\n    }\n  }, [isGameOver, isGameStarted]);\n\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.code === 'Space') {\n        jump();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [jump]);\n\n  useEffect(() => {\n    if (!isGameStarted || isGameOver) return;\n\n    const gameLoop = setInterval(() => {\n      setBirdPosition((prev) => {\n        const newPosition = prev + velocity;\n        if (newPosition > 500 || newPosition < 0) {\n          setIsGameOver(true);\n          playCollisionSound();\n          playGameOverSound();\n          return prev;\n        }\n        return newPosition;\n      });\n      setVelocity((prev) => prev + GRAVITY);\n    }, 20);\n\n    return () => clearInterval(gameLoop);\n  }, [velocity, isGameOver, isGameStarted]);\n\n  useEffect(() => {\n    if (!isGameStarted || isGameOver) return;\n\n    const pipeGenerator = setInterval(() => {\n      const height = Math.random() * (400 - PIPE_GAP);\n      setPipes((prev) => [...prev, { x: 800, height, passed: false, scored: false }]);\n    }, PIPE_INTERVAL);\n\n    return () => clearInterval(pipeGenerator);\n  }, [isGameOver, isGameStarted]);\n\n  useEffect(() => {\n    if (!isGameStarted || isGameOver) return;\n\n    const pipeInterval = setInterval(() => {\n      setPipes((prev) => {\n        return prev\n          .map((pipe) => {\n            const newX = pipe.x - (BASE_PIPE_SPEED * speedMultiplier);\n            \n            const birdLeft = 50;\n            const birdRight = birdLeft + 40;\n            const birdTop = birdPosition;\n            const birdBottom = birdPosition + 40;\n            \n            const pipeLeft = newX;\n            const pipeRight = newX + 60;\n            \n            if (\n              birdRight > pipeLeft && \n              birdLeft < pipeRight && \n              (birdTop < pipe.height || birdBottom > pipe.height + PIPE_GAP)\n            ) {\n              setIsGameOver(true);\n              playCollisionSound();\n              playGameOverSound();\n            }\n\n            // Only score if pipe center passes bird center and hasn't been scored\n            const pipeCenter = newX + 30;\n            const birdCenter = birdLeft + 20;\n            \n            if (!pipe.scored && pipeCenter < birdCenter && pipe.x + 30 >= birdCenter) {\n              if (lastScoredPipeRef.current !== newX) {\n                setScore(s => s + 1);\n                setSpeedMultiplier(prev => prev + SPEED_INCREASE);\n                lastScoredPipeRef.current = newX;\n                return { ...pipe, x: newX, passed: true, scored: true };\n              }\n            }\n\n            return { ...pipe, x: newX };\n          })\n          .filter((pipe) => pipe.x > -100);\n      });\n    }, 16);\n\n    return () => clearInterval(pipeInterval);\n  }, [isGameOver, birdPosition, speedMultiplier, isGameStarted]);\n\n  const restartGame = () => {\n    startGame();\n  };\n\n  return (\n    <div\n      onClick={isGameStarted ? jump : undefined}\n      style={{\n        height: '500px',\n        width: '100%',\n        backgroundColor: 'lightblue',\n        position: 'relative',\n        overflow: 'hidden',\n        cursor: isGameStarted ? 'pointer' : 'default',\n      }}\n    >\n      {!isGameStarted ? (\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            textAlign: 'center',\n            backgroundColor: 'rgba(255, 255, 255, 0.9)',\n            padding: '20px',\n            borderRadius: '10px',\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.2)',\n          }}\n        >\n          <h1 style={{ marginBottom: '20px', color: '#333' }}>Flappy Bird</h1>\n          <p style={{ marginBottom: '20px', color: '#666' }}>\n            Press SPACE or click to jump\n          </p>\n          <button\n            onClick={startGame}\n            style={{\n              padding: '10px 30px',\n              fontSize: '18px',\n              cursor: 'pointer',\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              transition: 'background-color 0.3s',\n            }}\n            onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#45a049'}\n            onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#4CAF50'}\n          >\n            Start Game\n          </button>\n        </div>\n      ) : (\n        <>\n          <Bird position={birdPosition} velocity={velocity} />\n          {pipes.map((pipe, i) => (\n            <div key={i} style={{ position: 'absolute', left: pipe.x, top: 0, height: '100%' }}>\n              <Pipe height={pipe.height} top />\n              <Pipe height={500 - pipe.height - PIPE_GAP} top={false} />\n            </div>\n          ))}\n          \n          <div\n            style={{\n              position: 'absolute',\n              top: '20px',\n              left: '20px',\n              fontSize: '24px',\n              fontWeight: 'bold',\n            }}\n          >\n            Score: {score}\n          </div>\n\n          {isGameOver && (\n            <div\n              style={{\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                textAlign: 'center',\n                backgroundColor: 'rgba(255, 255, 255, 0.9)',\n                padding: '20px',\n                borderRadius: '10px',\n                boxShadow: '0 0 10px rgba(0, 0, 0, 0.2)',\n              }}\n            >\n              <h1>Game Over!</h1>\n              <p style={{ marginBottom: '20px', fontSize: '20px' }}>\n                Final Score: {score}\n              </p>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  restartGame();\n                }}\n                style={{\n                  padding: '10px 20px',\n                  fontSize: '18px',\n                  cursor: 'pointer',\n                  backgroundColor: '#4CAF50',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '5px',\n                  transition: 'background-color 0.3s',\n                }}\n                onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#45a049'}\n                onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#4CAF50'}\n              >\n                Restart\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,eAAe,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/D,MAAMC,OAAO,GAAG,GAAG;AACnB,MAAMC,UAAU,GAAG,CAAC,CAAC;AACrB,MAAMC,QAAQ,GAAG,GAAG;AACpB,MAAMC,aAAa,GAAG,IAAI;AAC1B,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,cAAc,GAAG,KAAK,CAAC,CAAC;;AAE9B;AACA,MAAMC,uBAAuB,GAAG,IAAIC,KAAK,CAACZ,eAAe,CAAC;AAC1DW,uBAAuB,CAACE,IAAI,GAAG,IAAI;AACnCF,uBAAuB,CAACG,MAAM,GAAG,GAAG;AAEpC,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,GAAG,CAAC;EACrD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAoE,EAAE,CAAC;EACzG,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACqC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMuC,QAAQ,GAAGpC,MAAM,CAA0B,IAAI,CAAC;EACtD,MAAMqC,YAAY,GAAGrC,MAAM,CAA0B,IAAI,CAAC;EAC1D,MAAMsC,iBAAiB,GAAGtC,MAAM,CAAgB,IAAI,CAAC;;EAErD;EACAF,SAAS,CAAC,MAAM;IACdsC,QAAQ,CAACG,OAAO,GAAG,IAAItB,KAAK,CAACd,aAAa,CAAC;IAC3CkC,YAAY,CAACE,OAAO,GAAG,IAAItB,KAAK,CAACb,cAAc,CAAC;IAChDiC,YAAY,CAACE,OAAO,CAACpB,MAAM,GAAG,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArB,SAAS,CAAC,MAAM;IACd,MAAM0C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMxB,uBAAuB,CAACyB,IAAI,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;QAClD,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;UACpC,MAAM7B,uBAAuB,CAACyB,IAAI,CAAC,CAAC;UACpCK,QAAQ,CAACC,mBAAmB,CAAC,OAAO,EAAEF,iBAAiB,CAAC;QAC1D,CAAC;QACDC,QAAQ,CAACE,gBAAgB,CAAC,OAAO,EAAEH,iBAAiB,CAAC;MACvD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACXxB,uBAAuB,CAACiC,KAAK,CAAC,CAAC;MAC/BjC,uBAAuB,CAACkC,WAAW,GAAG,CAAC;IACzC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIf,QAAQ,CAACG,OAAO,EAAE;MACpBH,QAAQ,CAACG,OAAO,CAACW,WAAW,GAAG,CAAC;MAChCd,QAAQ,CAACG,OAAO,CAACE,IAAI,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIf,YAAY,CAACE,OAAO,EAAE;MACxBF,YAAY,CAACE,OAAO,CAACW,WAAW,GAAG,CAAC;MACpCb,YAAY,CAACE,OAAO,CAACE,IAAI,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtBlB,gBAAgB,CAAC,IAAI,CAAC;IACtBZ,eAAe,CAAC,GAAG,CAAC;IACpBE,WAAW,CAAC,CAAC,CAAC;IACdE,QAAQ,CAAC,EAAE,CAAC;IACZI,QAAQ,CAAC,CAAC,CAAC;IACXE,kBAAkB,CAAC,CAAC,CAAC;IACrBJ,aAAa,CAAC,KAAK,CAAC;IACpBS,iBAAiB,CAACC,OAAO,GAAG,IAAI;EAClC,CAAC;EAED,MAAMe,IAAI,GAAGvD,WAAW,CAAC,MAAM;IAC7B,IAAI,CAAC6B,UAAU,IAAIM,aAAa,EAAE;MAChCT,WAAW,CAACd,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,CAACiB,UAAU,EAAEM,aAAa,CAAC,CAAC;EAE/BpC,SAAS,CAAC,MAAM;IACd,MAAMyD,cAAc,GAAIC,CAAgB,IAAK;MAC3C,IAAIA,CAAC,CAACC,IAAI,KAAK,OAAO,EAAE;QACtBH,IAAI,CAAC,CAAC;MACR;IACF,CAAC;IAEDI,MAAM,CAACV,gBAAgB,CAAC,SAAS,EAAEO,cAAc,CAAC;IAClD,OAAO,MAAMG,MAAM,CAACX,mBAAmB,CAAC,SAAS,EAAEQ,cAAc,CAAC;EACpE,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEVxD,SAAS,CAAC,MAAM;IACd,IAAI,CAACoC,aAAa,IAAIN,UAAU,EAAE;IAElC,MAAM+B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCrC,eAAe,CAAEsC,IAAI,IAAK;QACxB,MAAMC,WAAW,GAAGD,IAAI,GAAGrC,QAAQ;QACnC,IAAIsC,WAAW,GAAG,GAAG,IAAIA,WAAW,GAAG,CAAC,EAAE;UACxCjC,aAAa,CAAC,IAAI,CAAC;UACnBuB,kBAAkB,CAAC,CAAC;UACpBD,iBAAiB,CAAC,CAAC;UACnB,OAAOU,IAAI;QACb;QACA,OAAOC,WAAW;MACpB,CAAC,CAAC;MACFrC,WAAW,CAAEoC,IAAI,IAAKA,IAAI,GAAGnD,OAAO,CAAC;IACvC,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMqD,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACnC,QAAQ,EAAEI,UAAU,EAAEM,aAAa,CAAC,CAAC;EAEzCpC,SAAS,CAAC,MAAM;IACd,IAAI,CAACoC,aAAa,IAAIN,UAAU,EAAE;IAElC,MAAMoC,aAAa,GAAGJ,WAAW,CAAC,MAAM;MACtC,MAAMK,MAAM,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAGvD,QAAQ,CAAC;MAC/Ce,QAAQ,CAAEkC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEO,CAAC,EAAE,GAAG;QAAEH,MAAM;QAAEI,MAAM,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IACjF,CAAC,EAAEzD,aAAa,CAAC;IAEjB,OAAO,MAAMkD,aAAa,CAACC,aAAa,CAAC;EAC3C,CAAC,EAAE,CAACpC,UAAU,EAAEM,aAAa,CAAC,CAAC;EAE/BpC,SAAS,CAAC,MAAM;IACd,IAAI,CAACoC,aAAa,IAAIN,UAAU,EAAE;IAElC,MAAM2C,YAAY,GAAGX,WAAW,CAAC,MAAM;MACrCjC,QAAQ,CAAEkC,IAAI,IAAK;QACjB,OAAOA,IAAI,CACRW,GAAG,CAAEC,IAAI,IAAK;UACb,MAAMC,IAAI,GAAGD,IAAI,CAACL,CAAC,GAAItD,eAAe,GAAGkB,eAAgB;UAEzD,MAAM2C,QAAQ,GAAG,EAAE;UACnB,MAAMC,SAAS,GAAGD,QAAQ,GAAG,EAAE;UAC/B,MAAME,OAAO,GAAGvD,YAAY;UAC5B,MAAMwD,UAAU,GAAGxD,YAAY,GAAG,EAAE;UAEpC,MAAMyD,QAAQ,GAAGL,IAAI;UACrB,MAAMM,SAAS,GAAGN,IAAI,GAAG,EAAE;UAE3B,IACEE,SAAS,GAAGG,QAAQ,IACpBJ,QAAQ,GAAGK,SAAS,KACnBH,OAAO,GAAGJ,IAAI,CAACR,MAAM,IAAIa,UAAU,GAAGL,IAAI,CAACR,MAAM,GAAGrD,QAAQ,CAAC,EAC9D;YACAiB,aAAa,CAAC,IAAI,CAAC;YACnBuB,kBAAkB,CAAC,CAAC;YACpBD,iBAAiB,CAAC,CAAC;UACrB;;UAEA;UACA,MAAM8B,UAAU,GAAGP,IAAI,GAAG,EAAE;UAC5B,MAAMQ,UAAU,GAAGP,QAAQ,GAAG,EAAE;UAEhC,IAAI,CAACF,IAAI,CAACH,MAAM,IAAIW,UAAU,GAAGC,UAAU,IAAIT,IAAI,CAACL,CAAC,GAAG,EAAE,IAAIc,UAAU,EAAE;YACxE,IAAI5C,iBAAiB,CAACC,OAAO,KAAKmC,IAAI,EAAE;cACtC3C,QAAQ,CAACoD,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;cACpBlD,kBAAkB,CAAC4B,IAAI,IAAIA,IAAI,GAAG9C,cAAc,CAAC;cACjDuB,iBAAiB,CAACC,OAAO,GAAGmC,IAAI;cAChC,OAAO;gBAAE,GAAGD,IAAI;gBAAEL,CAAC,EAAEM,IAAI;gBAAEL,MAAM,EAAE,IAAI;gBAAEC,MAAM,EAAE;cAAK,CAAC;YACzD;UACF;UAEA,OAAO;YAAE,GAAGG,IAAI;YAAEL,CAAC,EAAEM;UAAK,CAAC;QAC7B,CAAC,CAAC,CACDU,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACL,CAAC,GAAG,CAAC,GAAG,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAML,aAAa,CAACQ,YAAY,CAAC;EAC1C,CAAC,EAAE,CAAC3C,UAAU,EAAEN,YAAY,EAAEU,eAAe,EAAEE,aAAa,CAAC,CAAC;EAE9D,MAAMmD,WAAW,GAAGA,CAAA,KAAM;IACxBhC,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACE9C,OAAA;IACE+E,OAAO,EAAEpD,aAAa,GAAGoB,IAAI,GAAGiC,SAAU;IAC1CC,KAAK,EAAE;MACLvB,MAAM,EAAE,OAAO;MACfwB,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE,WAAW;MAC5BC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,MAAM,EAAE3D,aAAa,GAAG,SAAS,GAAG;IACtC,CAAE;IAAA4D,QAAA,EAED,CAAC5D,aAAa,gBACb3B,OAAA;MACEiF,KAAK,EAAE;QACLG,QAAQ,EAAE,UAAU;QACpBI,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,uBAAuB;QAClCC,SAAS,EAAE,QAAQ;QACnBR,eAAe,EAAE,0BAA0B;QAC3CS,OAAO,EAAE,MAAM;QACfC,YAAY,EAAE,MAAM;QACpBC,SAAS,EAAE;MACb,CAAE;MAAAP,QAAA,gBAEFvF,OAAA;QAAIiF,KAAK,EAAE;UAAEc,YAAY,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAT,QAAA,EAAC;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpEpG,OAAA;QAAGiF,KAAK,EAAE;UAAEc,YAAY,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAT,QAAA,EAAC;MAEnD;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJpG,OAAA;QACE+E,OAAO,EAAEjC,SAAU;QACnBmC,KAAK,EAAE;UACLW,OAAO,EAAE,WAAW;UACpBS,QAAQ,EAAE,MAAM;UAChBf,MAAM,EAAE,SAAS;UACjBH,eAAe,EAAE,SAAS;UAC1Ba,KAAK,EAAE,OAAO;UACdM,MAAM,EAAE,MAAM;UACdT,YAAY,EAAE,KAAK;UACnBU,UAAU,EAAE;QACd,CAAE;QACFC,WAAW,EAAGvD,CAAC,IAAKA,CAAC,CAACwD,aAAa,CAACxB,KAAK,CAACE,eAAe,GAAG,SAAU;QACtEuB,UAAU,EAAGzD,CAAC,IAAKA,CAAC,CAACwD,aAAa,CAACxB,KAAK,CAACE,eAAe,GAAG,SAAU;QAAAI,QAAA,EACtE;MAED;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENpG,OAAA,CAAAE,SAAA;MAAAqF,QAAA,gBACEvF,OAAA,CAACN,IAAI;QAAC0F,QAAQ,EAAErE,YAAa;QAACE,QAAQ,EAAEA;MAAS;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnDjF,KAAK,CAAC8C,GAAG,CAAC,CAACC,IAAI,EAAEyC,CAAC,kBACjB3G,OAAA;QAAaiF,KAAK,EAAE;UAAEG,QAAQ,EAAE,UAAU;UAAEK,IAAI,EAAEvB,IAAI,CAACL,CAAC;UAAE2B,GAAG,EAAE,CAAC;UAAE9B,MAAM,EAAE;QAAO,CAAE;QAAA6B,QAAA,gBACjFvF,OAAA,CAACL,IAAI;UAAC+D,MAAM,EAAEQ,IAAI,CAACR,MAAO;UAAC8B,GAAG;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjCpG,OAAA,CAACL,IAAI;UAAC+D,MAAM,EAAE,GAAG,GAAGQ,IAAI,CAACR,MAAM,GAAGrD,QAAS;UAACmF,GAAG,EAAE;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAFlDO,CAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACN,CAAC,eAEFpG,OAAA;QACEiF,KAAK,EAAE;UACLG,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAE,MAAM;UACXC,IAAI,EAAE,MAAM;UACZY,QAAQ,EAAE,MAAM;UAChBO,UAAU,EAAE;QACd,CAAE;QAAArB,QAAA,GACH,SACQ,EAAChE,KAAK;MAAA;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,EAEL/E,UAAU,iBACTrB,OAAA;QACEiF,KAAK,EAAE;UACLG,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAE,KAAK;UACVC,IAAI,EAAE,KAAK;UACXC,SAAS,EAAE,uBAAuB;UAClCC,SAAS,EAAE,QAAQ;UACnBR,eAAe,EAAE,0BAA0B;UAC3CS,OAAO,EAAE,MAAM;UACfC,YAAY,EAAE,MAAM;UACpBC,SAAS,EAAE;QACb,CAAE;QAAAP,QAAA,gBAEFvF,OAAA;UAAAuF,QAAA,EAAI;QAAU;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBpG,OAAA;UAAGiF,KAAK,EAAE;YAAEc,YAAY,EAAE,MAAM;YAAEM,QAAQ,EAAE;UAAO,CAAE;UAAAd,QAAA,GAAC,eACvC,EAAChE,KAAK;QAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACJpG,OAAA;UACE+E,OAAO,EAAG9B,CAAC,IAAK;YACdA,CAAC,CAAC4D,eAAe,CAAC,CAAC;YACnB/B,WAAW,CAAC,CAAC;UACf,CAAE;UACFG,KAAK,EAAE;YACLW,OAAO,EAAE,WAAW;YACpBS,QAAQ,EAAE,MAAM;YAChBf,MAAM,EAAE,SAAS;YACjBH,eAAe,EAAE,SAAS;YAC1Ba,KAAK,EAAE,OAAO;YACdM,MAAM,EAAE,MAAM;YACdT,YAAY,EAAE,KAAK;YACnBU,UAAU,EAAE;UACd,CAAE;UACFC,WAAW,EAAGvD,CAAC,IAAKA,CAAC,CAACwD,aAAa,CAACxB,KAAK,CAACE,eAAe,GAAG,SAAU;UACtEuB,UAAU,EAAGzD,CAAC,IAAKA,CAAC,CAACwD,aAAa,CAACxB,KAAK,CAACE,eAAe,GAAG,SAAU;UAAAI,QAAA,EACtE;QAED;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA,eACD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtF,EAAA,CA1RID,IAAc;AAAAiG,EAAA,GAAdjG,IAAc;AA4RpB,eAAeA,IAAI;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}